<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Just Some Geek: dev</title>
  <subtitle>Posts tagged with dev</subtitle>
  <id>http://justsomegeek.com</id>
  <link href="http://justsomegeek.com"/>
  <link href="http://justsomegeek.com/tag/dev/feed.xml" rel="self"/>
  <updated>2019-04-16T20:41:00+02:00</updated>
  <author>
    <name>m1n0</name>
  </author>
  <entry>
    <title>Why and how I started learning Python and Machine Learning pt.2</title>
    <link rel="alternate" href="http://justsomegeek.com/2019/04/16/why-and-how-i-started-learning-python-and-machine-learning-pt-2/"/>
    <id>http://justsomegeek.com/2019/04/16/why-and-how-i-started-learning-python-and-machine-learning-pt-2/</id>
    <published>2019-04-16T20:41:00+02:00</published>
    <updated>2019-04-18T10:52:38+02:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> It has been over a year since I decided to document my python/ML/Data Science learning path online a bit. A lot has happened in the meantime, especially in my </summary>
  </entry>
  <entry>
    <title>ML&amp;#58; Building a simple classifier (Titanic pt.1)</title>
    <link rel="alternate" href="http://justsomegeek.com/2019/03/14/ml-building-basic-classifier/"/>
    <id>http://justsomegeek.com/2019/03/14/ml-building-basic-classifier/</id>
    <published>2019-03-14T21:52:00+01:00</published>
    <updated>2019-04-18T20:34:31+02:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> This article is part of Titanic series - a short series on basic ML concepts based on the famous Titanic Kaggle challenge 

 the problem 

 Learning Machine Learning </summary>
  </entry>
  <entry>
    <title>Symfony&amp;#58; Roles and Permissions in configuration</title>
    <link rel="alternate" href="http://justsomegeek.com/2018/04/15/symfony-roles-and-permissions-in-configuration/"/>
    <id>http://justsomegeek.com/2018/04/15/symfony-roles-and-permissions-in-configuration/</id>
    <published>2018-04-16T00:12:00+02:00</published>
    <updated>2019-03-01T11:11:27+01:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> There are different approaches to managing roles and permissions on a project,
ranging from very simple hardcoded checks to fully adjustable database based solutions </summary>
  </entry>
  <entry>
    <title>Why and how I started learning Python and Machine Learning pt.1</title>
    <link rel="alternate" href="http://justsomegeek.com/2017/11/19/why-and-how-i-started-learning-python-and-machine-learning-pt-1/"/>
    <id>http://justsomegeek.com/2017/11/19/why-and-how-i-started-learning-python-and-machine-learning-pt-1/</id>
    <published>2017-11-19T22:37:00+01:00</published>
    <updated>2017-11-21T18:53:09+01:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> why 

 Python and ML together? PHP web development is my current day job, but I have
been looking into expanding my horizons for some time now. I would not dare </summary>
  </entry>
  <entry>
    <title>Empty GIT commit</title>
    <link rel="alternate" href="http://justsomegeek.com/2017/11/09/empty-git-commit/"/>
    <id>http://justsomegeek.com/2017/11/09/empty-git-commit/</id>
    <published>2017-11-09T10:53:00+01:00</published>
    <updated>2017-11-10T06:26:41+01:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> Empty commits in git make sense is some scenarios, you might use them to trigger
workflows, builds, test commit hooks etcâ€¦ 

 To create an empty commit, simply </summary>
  </entry>
  <entry>
    <title>PHPUnit&amp;#58; Mocking external data provider in functional tests</title>
    <link rel="alternate" href="http://justsomegeek.com/2017/10/19/phpunit-mocking-external-data-provider-in-functional-tests/"/>
    <id>http://justsomegeek.com/2017/10/19/phpunit-mocking-external-data-provider-in-functional-tests/</id>
    <published>2017-10-19T19:58:00+02:00</published>
    <updated>2017-11-09T12:05:28+01:00</updated>
    <author>
      <name>m1n0</name>
    </author>
    <summary type="html"> Mocking is a common thing in the world of automated testing, nothing to write
home about. Nevertheless, I decided to document how to do it in Symfony with
PHPUnit </summary>
  </entry>
</feed>
